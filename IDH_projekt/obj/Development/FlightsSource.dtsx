<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/8/2022 11:41:18 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-JCAI2HSF"
  DTS:CreatorName="LAPTOP-JCAI2HSF\Lenovo"
  DTS:DTSID="{40BDE83B-8E49-44CB-B889-732B667A81D2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1045"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="30"
  DTS:VersionGUID="{52097C02-20BD-4C8D-8EBB-F3FE11CAE540}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[airlines]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A49F4222-FC75-4321-B79D-88F3AC00F8BF}"
      DTS:ObjectName="airlines">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1250"
          DTS:ConnectionString="C:\Users\Lenovo\Desktop\IDH_projekt\airlines.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Airline ID"
              DTS:DTSID="{AFFAC501-DDDC-426D-8F4D-D8041FC4745D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Name"
              DTS:DTSID="{E15102D1-D3C3-4E41-90DF-C0993C212982}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Alias"
              DTS:DTSID="{04A5B13E-6940-4907-BCA2-B98FDE36F693}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="IATA"
              DTS:DTSID="{EFAFDFC7-9E4F-4A49-9871-E76F2FAE7B56}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="3"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ICAO"
              DTS:DTSID="{67781A80-4907-483E-B2DF-F6A20FE32AA9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Callsign"
              DTS:DTSID="{0E67B177-FA97-4276-A5C9-A55A1BE90C1A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Country"
              DTS:DTSID="{514990DE-9C94-4B82-930F-255CB105EECC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="1"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Active"
              DTS:DTSID="{0CE280F0-22AE-4122-8036-7DF550C9BED4}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[flights_file]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C354BF3E-C0E7-4728-BB72-E1BCA3A63AAA}"
      DTS:ObjectName="flights_file">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1250"
          DTS:ConnectionString="C:\Users\Lenovo\Desktop\IDH_projekt\flights\flightlist_20210901_20210930.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="callsign"
              DTS:DTSID="{E36F10C5-B536-45D4-AF89-D4DC2C3DD9FD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="number"
              DTS:DTSID="{C083197C-C4C4-44AC-AAF6-6CCA48ABD942}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="icao24"
              DTS:DTSID="{D0B695CE-7229-4882-8A71-9CF53EF4EE58}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="registration"
              DTS:DTSID="{3A248614-124A-49AB-8295-0BBC474A744B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="typecode"
              DTS:DTSID="{5E52EC31-5E66-410A-ACEE-C3AC86BF7879}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="origin"
              DTS:DTSID="{8608235C-EB58-42AD-8636-9A68443D8808}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="destination"
              DTS:DTSID="{23AF0C4C-EC8E-4A4C-83E1-E8B6188ECEF0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="firstseen"
              DTS:DTSID="{8DDFBD8D-78DD-4DE2-8F42-10C528923726}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="lastseen"
              DTS:DTSID="{8AF0100B-62C8-48F2-B881-1FDFF648C594}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="day"
              DTS:DTSID="{490D97AD-6424-425B-8997-FEB2C9B5CB9C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="latitude_1"
              DTS:DTSID="{00E8A17D-9EB0-4FAE-9CA3-75D228E28A01}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude_1"
              DTS:DTSID="{F65B8988-5A7E-44AD-88B5-154C0047F522}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="altitude_1"
              DTS:DTSID="{C6040AA9-6A86-4F14-A32F-2615AAA70318}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="latitude_2"
              DTS:DTSID="{725EA9FF-9EF5-4207-A445-4DB97E54FC27}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude_2"
              DTS:DTSID="{213E26B9-3F00-4707-8003-5C70D24A9158}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="altitude_2"
              DTS:DTSID="{0C8F6D89-A5D2-4685-85A5-8300CF2E3843}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-JCAI2HSF\MSSQLSERVER01.IDH]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0955DD7F-D9DB-4FCE-B14D-24F3C87B4AB7}"
      DTS:ObjectName="LAPTOP-JCAI2HSF\MSSQLSERVER01.IDH">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-JCAI2HSF\MSSQLSERVER01;Initial Catalog=IDH;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-JCAI2HSF\MSSQLSERVER01.IDH 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B25D31DB-39CF-4BBD-87E6-AEDECC49E824}"
      DTS:ObjectName="LAPTOP-JCAI2HSF\MSSQLSERVER01.IDH 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-JCAI2HSF\MSSQLSERVER01;Initial Catalog=IDH;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - import Flights"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E3B03B4F-63C8-40CF-A010-45BE54E13385}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - import Flights"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - coordinates empty"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input].Columns[latitude_1]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="latitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input].Columns[longitude_1]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="longitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input].Columns[altitude_1]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="altitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input].Columns[latitude_2]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="latitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input].Columns[longitude_2]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="longitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input].Columns[altitude_2]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="altitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_2]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[coordiantes empty]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="coordiantes empty"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_1]}) || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_2]}) || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_1]}) || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_2]}) || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_1]}) || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_2]}) || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_1]} == "" || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_1]} == "" || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_1]} == "" || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_2]} == "" || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_2]} == "" || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_2]} == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(latitude_1) || ISNULL(latitude_2) || ISNULL(longitude_1) || ISNULL(longitude_2) || ISNULL(altitude_1) || ISNULL(altitude_2) || latitude_1 == "" || longitude_1 == "" || altitude_1 == "" || latitude_2 == "" || longitude_2 == "" || altitude_2 == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[other rows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="other rows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - day"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - day"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - day.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - day.Inputs[Conditional Split Input].Columns[day]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="day"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[day]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[day empty]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="day empty"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - day.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[day]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[day]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">day == "" || ISNULL(day)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[otherRows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="otherRows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - day.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - day.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - destination"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - destination"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Inputs[Conditional Split Input].Columns[destination]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="destination"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[destination]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[destination is null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="destination is null"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - destination.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[destination]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[destination]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">destination == "" || ISNULL(destination)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[other rows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="other rows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - destination.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - destination.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - firstseen"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Inputs[Conditional Split Input].Columns[firstseen]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="firstseen"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[firstseen]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[firstseen empty]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="firstseen empty"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[firstseen]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[firstseen]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">firstseen == "" || ISNULL(firstseen)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[otherRows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="otherRows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - icao, callsign, registration"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input].Columns[icao24]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="icao24"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[icao24]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input].Columns[callsign]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="callsign"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[callsign]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input].Columns[registration]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="registration"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[registration]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[icao is null or callsign is null or registration is null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="icao is null or callsign is null or registration is null"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[icao24]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[icao24]}) || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[callsign]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[callsign]}) || #{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[registration]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[registration]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">icao24 == "" || ISNULL(icao24) || callsign == "" || ISNULL(callsign) || registration == "" || ISNULL(registration)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[other rows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="other rows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - lastseen"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Inputs[Conditional Split Input].Columns[lastseen]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lastseen"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[lastseen]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[lastseen empty]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="lastseen empty"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[lastseen]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[lastseen]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">lastseen == "" || ISNULL(lastseen)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[otherRows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="otherRows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Conditional Split - origin"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split - origin"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Inputs[Conditional Split Input].Columns[origin]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="origin"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[origin]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[origin is null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="origin is null"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - origin.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[origin]} == "" || [ISNULL](#{Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[origin]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">origin == "" || ISNULL(origin)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[other rows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="other rows"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - origin.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\Conditional Split - origin.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Flat File Source - flights"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1045"
              name="Flat File Source - flights"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[flights_file]"
                  connectionManagerRefId="Package.ConnectionManagers[flights_file]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[callsign]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[callsign]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[callsign]"
                      name="callsign"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[number]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[number]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[number]"
                      name="number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[icao24]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[icao24]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[icao24]"
                      name="icao24"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[registration]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[registration]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[registration]"
                      name="registration"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[typecode]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[typecode]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[typecode]"
                      name="typecode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[origin]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[origin]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[origin]"
                      name="origin"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[destination]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[destination]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[destination]"
                      name="destination"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[firstseen]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[firstseen]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[firstseen]"
                      name="firstseen"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[lastseen]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[lastseen]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[lastseen]"
                      name="lastseen"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_1]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[latitude_1]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_1]"
                      name="latitude_1"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_1]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[longitude_1]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_1]"
                      name="longitude_1"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_1]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[altitude_1]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_1]"
                      name="altitude_1"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_2]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[latitude_2]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_2]"
                      name="latitude_2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_2]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[longitude_2]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_2]"
                      name="longitude_2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_2]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[altitude_2]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_2]"
                      name="altitude_2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[day]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[day]"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[day]"
                      name="day"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[callsign]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="callsign" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[number]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="number" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[icao24]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="icao24" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[registration]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="registration" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[typecode]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="typecode" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[origin]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="origin" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[destination]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="destination" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[firstseen]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="firstseen" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[lastseen]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="lastseen" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[day]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="day" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[latitude_1]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="latitude_1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[longitude_1]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="longitude_1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[altitude_1]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="altitude_1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[latitude_2]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="latitude_2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[longitude_2]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="longitude_2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].ExternalColumns[altitude_2]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="altitude_2" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1250"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination - import Flights"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Flight]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-JCAI2HSF\MSSQLSERVER01.IDH]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JCAI2HSF\MSSQLSERVER01.IDH]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_callsign]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_callsign"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Callsign]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_callsign]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_number]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_number"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Number]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_number]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_icao24]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_icao24"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[ICAO24]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_icao24]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_registration]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_registration"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Registration]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_registration]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_typecode]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_typecode"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[TypeCode]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_typecode]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_origin]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_origin"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Origin]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_origin]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_destination]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_destination"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Destination]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_destination]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_firstseen]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Out_firstseen"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[FirstSeen]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_firstseen]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_lastseen]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Out_lastseen"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[LastSeen]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_lastseen]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_day]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Out_day"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_day]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_latitude_1]"
                      cachedDataType="r4"
                      cachedName="Out_latitude_1"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Latitude_1]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_latitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_longtitude_1]"
                      cachedDataType="r4"
                      cachedName="Out_longtitude_1"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Longitude_1]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_longtitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_altitude_1]"
                      cachedDataType="r4"
                      cachedName="Out_altitude_1"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Altitude_1]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_altitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_latitude_2]"
                      cachedDataType="r4"
                      cachedName="Out_latitude_2"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Latitude_2]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_latitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_longtitude_2]"
                      cachedDataType="r4"
                      cachedName="Out_longtitude_2"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Longitude_2]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_longtitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_altitude_2]"
                      cachedDataType="r4"
                      cachedName="Out_altitude_2"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Altitude_2]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_altitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].Columns[Out_airlineicao]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_airlineicao"
                      externalMetadataColumnId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[AirlineICAO]"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_airlineicao]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Callsign]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="Callsign" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Number]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="Number" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[ICAO24]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="ICAO24" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Registration]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="Registration" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[TypeCode]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="TypeCode" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Origin]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="Origin" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Destination]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="Destination" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[FirstSeen]"
                      dataType="dbTimeStamp"
                      name="FirstSeen" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[LastSeen]"
                      dataType="dbTimeStamp"
                      name="LastSeen" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      dataType="dbTimeStamp"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Latitude_1]"
                      dataType="r8"
                      name="Latitude_1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Longitude_1]"
                      dataType="r8"
                      name="Longitude_1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Altitude_1]"
                      dataType="r8"
                      name="Altitude_1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Latitude_2]"
                      dataType="r8"
                      name="Latitude_2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Longitude_2]"
                      dataType="r8"
                      name="Longitude_2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[Altitude_2]"
                      dataType="r8"
                      name="Altitude_2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input].ExternalColumns[AirlineICAO]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="AirlineICAO" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        Row.Outcallsign = Row.callsign;

        if (Row.number == null || Row.number == "")
        {
            Row.Outnumber = "Number not available";
        }
        else
        {
            Row.Outnumber = Row.number;
        }


        Row.Outregistration = Row.registration;

        if (Row.typecode == null || Row.typecode == "")
        {
            Row.Outtypecode = "Type code not available";
        }
        else
        {
            Row.Outtypecode = Row.typecode;
        }

        Row.Outorigin = Row.origin;
        Row.Outdestination = Row.destination;

        Row.Outicao24 = Row.icao24;

        Row.Outfirstseen = DateTime.ParseExact(Row.firstseen, "yyyy-MM-dd HH:mm:sszzz", System.Globalization.CultureInfo.InvariantCulture);
        Row.Outlastseen = DateTime.ParseExact(Row.lastseen, "yyyy-MM-dd HH:mm:sszzz", System.Globalization.CultureInfo.InvariantCulture);
        Row.Outday = DateTime.ParseExact(Row.day, "yyyy-MM-dd HH:mm:sszzz", System.Globalization.CultureInfo.InvariantCulture);

        Row.Outlatitude1 = float.Parse(Row.latitude1.Replace(".",","));
        Row.Outlongtitude1 = float.Parse(Row.longitude1.Replace(".", ","));
        Row.Outaltitude1 = float.Parse(Row.altitude1.Replace(".", ","));
        Row.Outlatitude2 = float.Parse(Row.latitude2.Replace(".", ","));
        Row.Outlongtitude2 = float.Parse(Row.longitude2.Replace(".", ","));
        Row.Outaltitude2 = float.Parse(Row.altitude2.Replace(".", ","));

        if(Row.callsign.Length >= 3)
        {
            Row.Outairlineicao = Row.callsign.Substring(0,3);
        }
        else
        {
            Row.Outairlineicao = Row.callsign;
        }
        

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_029f87524a974c3dae9f36e3de01fb6e.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{82cd6d65-b071-4bd5-935b-8c642410e757}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_029f87524a974c3dae9f36e3de01fb6e</RootNamespace>
    <AssemblyName>SC_029f87524a974c3dae9f36e3de01fb6e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_029f87524a974c3dae9f36e3de01fb6e" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String callsign
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool callsign_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String number
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool number_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String icao24
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool icao24_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String registration
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool registration_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String typecode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool typecode_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String origin
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool origin_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String destination
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool destination_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String firstseen
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool firstseen_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String lastseen
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool lastseen_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String latitude1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool latitude1_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String longitude1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool longitude1_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String altitude1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool altitude1_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String latitude2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool latitude2_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String longitude2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool longitude2_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String altitude2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool altitude2_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String day
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool day_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String Outcallsign
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Outcallsign_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outnumber
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Outnumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outicao24
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Outicao24_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outregistration
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Outregistration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outtypecode
    {
        set
        {
            this[20] = value;
        }
    }
    public bool Outtypecode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outorigin
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Outorigin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outdestination
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Outdestination_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Outfirstseen
    {
        set
        {
            this[23] = value;
        }
    }
    public bool Outfirstseen_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Outlastseen
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Outlastseen_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Outday
    {
        set
        {
            this[25] = value;
        }
    }
    public bool Outday_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Outlatitude1
    {
        set
        {
            this[26] = value;
        }
    }
    public bool Outlatitude1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Outlongtitude1
    {
        set
        {
            this[27] = value;
        }
    }
    public bool Outlongtitude1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Outaltitude1
    {
        set
        {
            this[28] = value;
        }
    }
    public bool Outaltitude1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Outlatitude2
    {
        set
        {
            this[29] = value;
        }
    }
    public bool Outlatitude2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Outlongtitude2
    {
        set
        {
            this[30] = value;
        }
    }
    public bool Outlongtitude2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Outaltitude2
    {
        set
        {
            this[31] = value;
        }
    }
    public bool Outaltitude2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Outairlineicao
    {
        set
        {
            this[32] = value;
        }
    }
    public bool Outairlineicao_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_029f87524a974c3dae9f36e3de01fb6e.Properties.Settings.get_Default():SC_029f87524a974c3dae9f36e3de01fb6e.Properties.Sett" +
    "ings")]

namespace SC_029f87524a974c3dae9f36e3de01fb6e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_029f87524a974c3dae9f36e3de01fb6e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_029f87524a974c3dae9f36e3de01fb6e</msb:DisplayName>
    <msb:ProjectId>{6C383A94-C074-4BD2-9C24-0B135B34DC09}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_029f87524a974c3dae9f36e3de01fb6e.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_029f87524a974c3dae9f36e3de01fb6e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_029f87524a974c3dae9f36e3de01fb6e")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_029f87524a974c3dae9f36e3de01fb6e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_029f87524a974c3dae9f36e3de01fb6e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_029f87524a974c3dae9f36e3de01fb6e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_029f87524a974c3dae9f36e3de01fb6e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_029f87524a974c3dae9f36e3de01fb6e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_029f87524a974c3dae9f36e3de01fb6e.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO2w2WEAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAAokQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFBEAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAqCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACE
RAAAAAAAAEgAAAACAAUAuCcAAOAbAAABAAAAAAAAAJhDAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQA4gEAAAAAAAADA28GAAAG
byYAAAYDbwgAAAYsEgNvCAAABnIBAABwKBIAAAosDQNyAwAAcG8oAAAGKwwDA28IAAAGbygAAAYD
A28MAAAGbywAAAYDbw4AAAYsEgNvDgAABnIBAABwKBIAAAosDQNyLQAAcG8uAAAGKwwDA28OAAAG
by4AAAYDA28QAAAGbzAAAAYDA28SAAAGbzIAAAYDA28KAAAGbyoAAAYDA28UAAAGcl0AAHAoEwAA
CigUAAAKbzQAAAYDA28WAAAGcl0AAHAoEwAACigUAAAKbzYAAAYDA28kAAAGcl0AAHAoEwAACigU
AAAKbzgAAAYDA28YAAAGcosAAHByjwAAcG8VAAAKKBYAAApvOgAABgMDbxoAAAZyiwAAcHKPAABw
bxUAAAooFgAACm88AAAGAwNvHAAABnKLAABwco8AAHBvFQAACigWAAAKbz4AAAYDA28eAAAGcosA
AHByjwAAcG8VAAAKKBYAAApvQAAABgMDbyAAAAZyiwAAcHKPAABwbxUAAAooFgAACm9CAAAGAwNv
IgAABnKLAABwco8AAHBvFQAACigWAAAKb0QAAAYDbwYAAAZvFwAAChkyFAMDbwYAAAYWGW8YAAAK
b0YAAAYqAwNvBgAABm9GAAAGKh4CKEoAAAYqKgIDBAUoGQAACipSAnsaAAAKAnsbAAAKFpRvHAAA
CioiAhYoHQAACipSAnsaAAAKAnsbAAAKF5RvHAAACioiAhcoHQAACipSAnsaAAAKAnsbAAAKGJRv
HAAACioiAhgoHQAACipSAnsaAAAKAnsbAAAKGZRvHAAACioiAhkoHQAACipSAnsaAAAKAnsbAAAK
GpRvHAAACioiAhooHQAACipSAnsaAAAKAnsbAAAKG5RvHAAACioiAhsoHQAACipSAnsaAAAKAnsb
AAAKHJRvHAAACioiAhwoHQAACipSAnsaAAAKAnsbAAAKHZRvHAAACioiAh0oHQAACipSAnsaAAAK
AnsbAAAKHpRvHAAACioiAh4oHQAACipWAnsaAAAKAnsbAAAKHwmUbxwAAAoqJgIfCSgdAAAKKlYC
exoAAAoCexsAAAofCpRvHAAACiomAh8KKB0AAAoqVgJ7GgAACgJ7GwAACh8LlG8cAAAKKiYCHwso
HQAACipWAnsaAAAKAnsbAAAKHwyUbxwAAAoqJgIfDCgdAAAKKlYCexoAAAoCexsAAAofDZRvHAAA
CiomAh8NKB0AAAoqVgJ7GgAACgJ7GwAACh8OlG8cAAAKKiYCHw4oHQAACipWAnsaAAAKAnsbAAAK
Hw+UbxwAAAoqJgIfDygdAAAKKioCHxADKB4AAAoqXgMsCQIfECgfAAAKKnKTAABwcyAAAAp6KgIf
EQMoHgAACipeAywJAh8RKB8AAAoqcpMAAHBzIAAACnoqAh8SAygeAAAKKl4DLAkCHxIoHwAACipy
kwAAcHMgAAAKeioCHxMDKB4AAAoqXgMsCQIfEygfAAAKKnKTAABwcyAAAAp6KgIfFAMoHgAACipe
AywJAh8UKB8AAAoqcpMAAHBzIAAACnoqAh8VAygeAAAKKl4DLAkCHxUoHwAACipykwAAcHMgAAAK
eioCHxYDKB4AAAoqXgMsCQIfFigfAAAKKnKTAABwcyAAAAp6PgIfFwOMEQAAASgeAAAKKl4DLAkC
HxcoHwAACipykwAAcHMgAAAKej4CHxgDjBEAAAEoHgAACipeAywJAh8YKB8AAAoqcpMAAHBzIAAA
Cno+Ah8ZA4wRAAABKB4AAAoqXgMsCQIfGSgfAAAKKnKTAABwcyAAAAp6PgIfGgOMHQAAASgeAAAK
Kl4DLAkCHxooHwAACipykwAAcHMgAAAKej4CHxsDjB0AAAEoHgAACipeAywJAh8bKB8AAAoqcpMA
AHBzIAAACno+Ah8cA4wdAAABKB4AAAoqXgMsCQIfHCgfAAAKKnKTAABwcyAAAAp6PgIfHQOMHQAA
ASgeAAAKKl4DLAkCHx0oHwAACipykwAAcHMgAAAKej4CHx4DjB0AAAEoHgAACipeAywJAh8eKB8A
AAoqcpMAAHBzIAAACno+Ah8fA4wdAAABKB4AAAoqXgMsCQIfHygfAAAKKnKTAABwcyAAAAp6KgIf
IAMoHgAACipeAywJAh8gKB8AAAoqcpMAAHBzIAAACnoeAighAAAKKh4CKCIAAAoqfgIoIwAACgIC
c04AAAZ9AQAABAICc08AAAZ9AgAABCqSBHIwAQBwGm8kAAAKLBUCBQIDKCUAAAoOBHMFAAAGb0wA
AAYqSisHAgNvTQAABgNvSAAABi3xKgYqOgIoJgAACgIDfQMAAAQqOgIoJgAACgIDfQQAAAQqHgIo
JgAACiqufgUAAAQtHnJAAQBw0AcAAAIoJwAACm8oAAAKcykAAAqABQAABH4FAAAEKhp+BgAABCoe
AoAGAAAEKhp+BwAABCoeAigqAAAKKi5zVQAABoAHAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAKwMAAAjfgAAGA0AACgLAAAjU3RyaW5ncwAAAABAGAAAtAEAACNVUwD0
GQAAEAAAACNHVUlEAAAABBoAANwBAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEA
AAAiAAAACAAAAAcAAABWAAAALwAAACoAAAAQAAAAAwAAAEUAAABGAAAAAQAAAAQAAAABAAAAAAAr
BAEAAAAAAAYADQM2CQYAoQM2CQYAWQIjCQ8AqgkAAAYAhgI8CAYA8AI8CAYA0QI8CAYAiAM8CAYA
LQM8CAYARgM8CAYAnQI8CAYAuALcAwoAYQOLAQoA9QiLAQ4A5giLAQoAmAiLAQYAggE6BwoAewqL
AQYAPgo6BwYAPAIjCQYABglWCQYAjAgnCBIADAIVBBIAbQIVBBIA7gESCAYAIQI2CQYA+QM6BwYA
yQg6BwYAcQE6BwYATgg6BwYAaAg6BwYArAE6BwYATQE6BwYAEws8CAAAAADaAAAAAAABAAEAAQAQ
AKYHAAAQAAEAAQABABAA2QgAADkAAQAFAAEAEABdCgAASQABAEoAAQAQACcKAABNAAMATgABABAA
6AkAAE0ABABPAAAAEABdCbkJTQAFAFAAAAEQABcKuQllAAcAVAAGACcKoAAGAOgJpAABAGsKqAAB
AGsKqAARAEEHrAARAMkBsAARACABtABQIAAAAADGAL8DBgABAFggAAAAAMYAygMGAAEAYCAAAAAA
xgDdCrgAAQBOIgAAAACGGBYJBgACAFYiAAAAAIYYFglEAAIAYSIAAAAAhgiJB74ABQB2IgAAAACG
CBEGZgAFAH8iAAAAAIYIsAi+AAUAlCIAAAAAhgjhBmYABQCdIgAAAACGCMEAvgAFALIiAAAAAIYI
ZwVmAAUAuyIAAAAAhgjtB74ABQDQIgAAAACGCJQGZgAFANkiAAAAAIYIMAG+AAUA7iIAAAAAhgiO
BWYABQD3IgAAAACGCLEHvgAFAAwjAAAAAIYIPAZmAAUAFSMAAAAAhgjKB74ABQAqIwAAAACGCGMG
ZgAFADMjAAAAAIYIage+AAUASCMAAAAAhgjkBWYABQBRIwAAAACGCE0HvgAFAGYjAAAAAIYIuQVm
AAUAbyMAAAAAhggQAL4ABQCFIwAAAACGCGkEZgAFAI8jAAAAAIYIAQC+AAUApSMAAAAAhghTBGYA
BQCvIwAAAACGCEIAvgAFAMUjAAAAAIYIsARmAAUAzyMAAAAAhghwAL4ABQDlIwAAAACGCPMEZgAF
AO8jAAAAAIYIYQC+AAUABSQAAAAAhgjdBGYABQAPJAAAAACGCKIAvgAFACUkAAAAAIYIOgVmAAUA
LyQAAAAAhgj8Cr4ABQBFJAAAAACGCAgHZgAFAE8kAAAAAIYIlgcQAAUAWiQAAAAAhgglBsIABgBy
JAAAAACGCLsIEAAHAH0kAAAAAIYI8wbCAAgAlSQAAAAAhgjMABAACQCgJAAAAACGCHkFwgAKALgk
AAAAAIYI/gcQAAsAwyQAAAAAhgisBsIADADbJAAAAACGCD0BEAANAOYkAAAAAIYIogXCAA4A/iQA
AAAAhgi8BxAADwAJJQAAAACGCE4GwgAQACElAAAAAIYI2gcQABEALCUAAAAAhgh6BsIAEgBEJQAA
AACGCHgHxwATAFQlAAAAAIYI+QXCABQAbCUAAAAAhghaB8cAFQB8JQAAAACGCM0FwgAWAJQlAAAA
AIYIBAvHABcApCUAAAAAhggXB8IAGAC8JQAAAACGCB4AzQAZAMwlAAAAAIYIfgTCABoA5CUAAAAA
hggvAM0AGwD0JQAAAACGCJYEwgAcAAwmAAAAAIYIUADNAB0AHCYAAAAAhgjFBMIAHgA0JgAAAACG
CH4AzQAfAEQmAAAAAIYICAXCACAAXCYAAAAAhgiPAM0AIQBsJgAAAACGCCAFwgAiAIQmAAAAAIYI
sADNACMAlCYAAAAAhghPBcIAJACsJgAAAACGCHkIEAAlALcmAAAAAIYIxwbCACYAzyYAAAAAhgD0
CmYAJwDXJgAAAACGAEUKZgAnAN8mAAAAAIYYFgkGACcA/yYAAAAAxgDQCtIAJwAkJwAAAADGAckK
uAArADcnAAAAAMYB3Qq4ACwAOScAAAAAhhgWCdwALQBIJwAAAACGGBYJ3AAuAFcnAAAAAIMYFgkG
AC8AXycAAAAAkwgCCeIALwCLJwAAAACTCLEBIQAvAJInAAAAAJMIvQHnAC8AmicAAAAAlghRCu0A
MAChJwAAAACGGBYJBgAwAKknAAAAAJEYHAnyADAAAAABAPgKAAABAPsIAAACAPIJAAADAKYIAAAB
ANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYD
AAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAAB
ANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABANYD
AAABANYDAAABANYDAAABANYDAAABANYDAAABANYDAAABAOMAAAACAHgBAAADAPsIAAAEAKYIAAAB
APsIAAABAPgKAAABAIEKAAABAIEKAAABANYDCQAWCQEAEQAWCQYAGQAWCQoAKQAWCRAAMQAWCRAA
OQAWCRAAQQAWCRAASQAWCRAAUQAWCRAAWQAWCRAAYQAWCRAAaQAWCQYAoQAWCQYAwQAWCRUA0QAW
CQYAkQC/AwYAkQDKAwYA2QAcCxsAsQDZASEAiQAzCiYA2QAYAS8A6QAGAjUA2QAKBDoA2QAABD4A
cQAWCUQAcQD7CE4AcQDyCVIAeQD2A1YAcQAiB1sAcQAxB2AAcQApBwEA8QAWCRAAcQD0CmYAcQBF
CmYAkQAWCQYA2QAgCmoAkQAGCnEAmQAWCQYAAQFfAXcAAQEPC4AAqQAWCYYAyQAWCQYALgALABYB
LgATAB8BLgAbAD4BLgAjAEcBLgArAHABLgAzAHABLgA7AHABLgBDAEcBLgBLAHYBLgBTAHABLgBb
AI0BQwBjANcB4QB7ANcB4wBrANcBaQhzAD4BiQhzAD4BAwABAAcAQwAIAEUAAACdB/YAAAAsBvoA
AADCCPYAAAD6BvoAAADTAPYAAACABfoAAAAFCPYAAACzBvoAAABEAfYAAACpBfoAAADDB/YAAABV
BvoAAADhB/YAAACBBvoAAAB/B/YAAAAABvoAAABhB/YAAADUBfoAAAAlAPYAAACFBPoAAAAFAPYA
AABXBPoAAABXAPYAAADMBPoAAACFAPYAAAAPBfoAAABlAPYAAADhBPoAAAC3APYAAABWBfoAAAAL
C/YAAAAeB/oAAACaB/YAAAApBvoAAAC/CPYAAAD3BvoAAADQAPYAAAB9BfoAAAACCPYAAACwBvoA
AABBAfYAAACmBfoAAADAB/YAAABSBvoAAADeB/YAAAB+BvoAAAB8B/4AAAD9BfoAAABeB/4AAADR
BfoAAAAIC/4AAAAbB/oAAAAiAAMBAACCBPoAAAAzAAMBAACaBPoAAABUAAMBAADJBPoAAACCAAMB
AAAMBfoAAACTAAMBAAAkBfoAAAC0AAMBAABTBfoAAAB9CPYAAADLBvoAAAAGCQcBAADmAQwBAABV
ChEBAgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMA
AgAPABUAAgAQABcAAgARABkAAgASABsAAgATAB0AAgAUAB8AAgAVACEAAgAWACMAAgAXACUAAgAY
ACcAAgAZACkAAgAaACsAAgAbAC0AAgAcAC8AAgAdADEAAgAeADMAAgAfADUAAgAgADcAAgAhADkA
AgAiADsAAgAjAD0AAgAkAD8AAgAlAEEAAQAmAEMAAQAnAEUAAQAoAEcAAQApAEkAAQAqAEsAAQAr
AE0AAQAsAE8AAQAtAFEAAQAuAFMAAQAvAFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAzAF0AAQA0AF8A
AQA1AGEAAQA2AGMAAQA3AGUAAQA4AGcAAQA5AGkAAQA6AGsAAQA7AG0AAQA8AG8AAQA9AHEAAQA+
AHMAAQA/AHUAAQBAAHcAAQBBAHkAAQBCAHsAAQBDAH0AAQBEAH8AAQBFAIEAAQBGAIMAAQBHAIUA
AgBRAIcAAgBSAIkAAQBTAIkAAgBUAIsABIAAAAEAAAAAAAAAAAAAAAAA9AAAAAQAAAAAAAAAAAAA
AI4A6wAAAAAADwAAAAAAAAAAAAAAlwCLCgAAAAAPAAAAAAAAAAAAAACXAKgKAAAAAAQAAAAAAAAA
AAAAAI4AOgcAAAAAAAAAAAEAAABnCQAAAAAAZ2V0X2xvbmdpdHVkZTEAZ2V0X2xhdGl0dWRlMQBz
ZXRfT3V0bGF0aXR1ZGUxAHNldF9PdXRsb25ndGl0dWRlMQBnZXRfYWx0aXR1ZGUxAHNldF9PdXRh
bHRpdHVkZTEAZ2V0X2xvbmdpdHVkZTIAZ2V0X2xhdGl0dWRlMgBzZXRfT3V0bGF0aXR1ZGUyAHNl
dF9PdXRsb25ndGl0dWRlMgBnZXRfYWx0aXR1ZGUyAHNldF9PdXRhbHRpdHVkZTIAZ2V0X2ljYW8y
NABzZXRfT3V0aWNhbzI0ADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAU0NfMDI5Zjg3NTI0YTk3
NGMzZGFlOWYzNmUzZGUwMWZiNmUAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X3R5cGVjb2Rl
AHNldF9PdXR0eXBlY29kZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBTaW5n
bGUASW5wdXROYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAGdldF9JbnZhcmlhbnRD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAGdldF9MZW5ndGgAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNDXzAyOWY4NzUyNGE5NzRjM2RhZTlmMzZlM2RlMDFmYjZlLmRsbABnZXRfbG9u
Z2l0dWRlMV9Jc051bGwAZ2V0X2xhdGl0dWRlMV9Jc051bGwAc2V0X091dGxhdGl0dWRlMV9Jc051
bGwAc2V0X091dGxvbmd0aXR1ZGUxX0lzTnVsbABnZXRfYWx0aXR1ZGUxX0lzTnVsbABzZXRfT3V0
YWx0aXR1ZGUxX0lzTnVsbABnZXRfbG9uZ2l0dWRlMl9Jc051bGwAZ2V0X2xhdGl0dWRlMl9Jc051
bGwAc2V0X091dGxhdGl0dWRlMl9Jc051bGwAc2V0X091dGxvbmd0aXR1ZGUyX0lzTnVsbABnZXRf
YWx0aXR1ZGUyX0lzTnVsbABzZXRfT3V0YWx0aXR1ZGUyX0lzTnVsbABnZXRfaWNhbzI0X0lzTnVs
bABzZXRfT3V0aWNhbzI0X0lzTnVsbABnZXRfdHlwZWNvZGVfSXNOdWxsAHNldF9PdXR0eXBlY29k
ZV9Jc051bGwAZ2V0X2xhc3RzZWVuX0lzTnVsbABzZXRfT3V0bGFzdHNlZW5fSXNOdWxsAGdldF9m
aXJzdHNlZW5fSXNOdWxsAHNldF9PdXRmaXJzdHNlZW5fSXNOdWxsAGdldF9jYWxsc2lnbl9Jc051
bGwAc2V0X091dGNhbGxzaWduX0lzTnVsbABnZXRfb3JpZ2luX0lzTnVsbABzZXRfT3V0b3JpZ2lu
X0lzTnVsbABnZXRfZGVzdGluYXRpb25fSXNOdWxsAHNldF9PdXRkZXN0aW5hdGlvbl9Jc051bGwA
Z2V0X3JlZ2lzdHJhdGlvbl9Jc051bGwAc2V0X091dHJlZ2lzdHJhdGlvbl9Jc051bGwAc2V0X091
dGFpcmxpbmVpY2FvX0lzTnVsbABnZXRfbnVtYmVyX0lzTnVsbABzZXRfT3V0bnVtYmVyX0lzTnVs
bABnZXRfZGF5X0lzTnVsbABzZXRfT3V0ZGF5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBnZXRfbGFzdHNlZW4Ac2V0X091dGxhc3RzZWVuAGdldF9maXJzdHNlZW4A
c2V0X091dGZpcnN0c2VlbgBnZXRfY2FsbHNpZ24Ac2V0X091dGNhbGxzaWduAFNjcmlwdE1haW4A
Z2V0X29yaWdpbgBzZXRfT3V0b3JpZ2luAGdldF9kZXN0aW5hdGlvbgBzZXRfT3V0ZGVzdGluYXRp
b24AZ2V0X3JlZ2lzdHJhdGlvbgBzZXRfT3V0cmVnaXN0cmF0aW9uAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBzZXRfT3V0YWlybGluZWljYW8AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAZ2V0X251bWJlcgBzZXRfT3V0bnVtYmVyAElGb3Jt
YXRQcm92aWRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMDI5Zjg3NTI0YTk3NGMz
ZGFlOWYzNmUzZGUwMWZiNmUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDXzAyOWY4NzUyNGE5NzRjM2RhZTlmMzZlM2RlMDFmYjZlLlByb3BlcnRpZXMAVmFy
aWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVh
bHMAQ29ubmVjdGlvbnMAUGFyc2VFeGFjdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQA
VXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQw
X1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X2RheQBzZXRf
T3V0ZGF5AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQAAAQApTgB1AG0AYgBlAHIAIABuAG8AdAAg
AGEAdgBhAGkAbABhAGIAbABlAAAvVAB5AHAAZQAgAGMAbwBkAGUAIABuAG8AdAAgAGEAdgBhAGkA
bABhAGIAbABlAAAteQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgASAA6AG0AbQA6AHMAcwB6AHoAegAB
Ay4AAAMsAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABi
AGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwA
dQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBw
AHUAdAAgADAAAHFTAEMAXwAwADIAOQBmADgANwA1ADIANABhADkANwA0AGMAMwBkAGEAZQA5AGYA
MwA2AGUAMwBkAGUAMAAxAGYAYgA2AGUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAjQh2o1nFuUW1a7EJnBgoOQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQUA
AgIODgQAABJZCAADEUUODhJxBSACDg4OBAABDA4DIAAIBSACDggICSADARI9HQgSQQMGEj0DBh0I
BCABDggEIAECCAUgAgEIHAMgAAIGIAICDhF9BSABHQgICAABEoCBEYCFBSAAEoCJByACAQ4SgIkI
t3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkkDBhJVAwYSWQMGEiAFIAEBEgwDIAAOBCABAQIF
IAEBEUUEIAEBDAkgBAEIDhI9EkEFIAEBEkkEAAASVQUAAQESWQQAABIgAwAAAQMoAA4DKAACBCgA
EUUDKAAMBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQgBAAIAAAAAACgBACNTQ18wMjlmODc1MjRhOTc0YzNkYWU5ZjM2ZTNkZTAxZmI2ZQAABQEA
AAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAHhEAAAAAAAAAAAAAJJEAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACERAAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAw
ADIAOQBmADgANwA1ADIANABhADkANwA0AGMAMwBkAGEAZQA5AGYAMwA2AGUAMwBkAGUAMAAxAGYA
YgA2AGUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAMgA5AGYAOAA3ADUAMgA0AGEA
OQA3ADQAYwAzAGQAYQBlADkAZgAzADYAZQAzAGQAZQAwADEAZgBiADYAZQAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMAAyADkAZgA4ADcA
NQAyADQAYQA5ADcANABjADMAZABhAGUAOQBmADMANgBlADMAZABlADAAMQBmAGIANgBlAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAAMgA5AGYAOAA3ADUA
MgA0AGEAOQA3ADQAYwAzAGQAYQBlADkAZgAzADYAZQAzAGQAZQAwADEAZgBiADYAZQAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAApDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_029f87524a974c3dae9f36e3de01fb6e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">2D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[callsign]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="callsign"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[callsign]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[number]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="number"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[number]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[icao24]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="icao24"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[icao24]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[registration]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="registration"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[registration]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[typecode]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="typecode"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[typecode]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[origin]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="origin"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[origin]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[destination]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="destination"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[destination]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[firstseen]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="firstseen"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[firstseen]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[lastseen]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lastseen"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[lastseen]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[latitude_1]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="latitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[longitude_1]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="longitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[altitude_1]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="altitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_1]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[latitude_2]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="latitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[latitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[longitude_2]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="longitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[longitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[altitude_2]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="altitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[altitude_2]" />
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0].Columns[day]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="day"
                      lineageId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output].Columns[day]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_callsign]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_callsign]"
                      name="Out_callsign" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_number]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_number]"
                      name="Out_number" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_icao24]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_icao24]"
                      name="Out_icao24" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_registration]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_registration]"
                      name="Out_registration" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_typecode]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_typecode]"
                      name="Out_typecode" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_origin]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_origin]"
                      name="Out_origin" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_destination]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_destination]"
                      name="Out_destination" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_firstseen]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_firstseen]"
                      name="Out_firstseen" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_lastseen]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_lastseen]"
                      name="Out_lastseen" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_day]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_day]"
                      name="Out_day" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_1]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_1]"
                      name="Out_latitude_1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_1]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_1]"
                      name="Out_longtitude_1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_1]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_1]"
                      name="Out_altitude_1" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_2]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_2]"
                      name="Out_latitude_2" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_2]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_2]"
                      name="Out_longtitude_2" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_2]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_2]"
                      name="Out_altitude_2" />
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_airlineicao]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_airlineicao]"
                      name="Out_airlineicao" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - import Flights\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_callsign]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_callsign"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_callsign]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_number]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_number"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_number]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_icao24]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_icao24"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_icao24]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_registration]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_registration"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_registration]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_typecode]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_typecode"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_typecode]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_origin]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_origin"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_origin]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_destination]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_destination"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_destination]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_firstseen]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Out_firstseen"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_firstseen]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_lastseen]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Out_lastseen"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_lastseen]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_day]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Out_day"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_day]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_latitude_1]"
                      cachedDataType="r4"
                      cachedName="Out_latitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_1]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_longtitude_1]"
                      cachedDataType="r4"
                      cachedName="Out_longtitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_1]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_altitude_1]"
                      cachedDataType="r4"
                      cachedName="Out_altitude_1"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_1]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_latitude_2]"
                      cachedDataType="r4"
                      cachedName="Out_latitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_longtitude_2]"
                      cachedDataType="r4"
                      cachedName="Out_longtitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_altitude_2]"
                      cachedDataType="r4"
                      cachedName="Out_altitude_2"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input].Columns[Out_airlineicao]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Out_airlineicao"
                      lineageId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_airlineicao]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_callsign]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_callsign]"
                      name="Out_callsign">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_callsign]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_number]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_number]"
                      name="Out_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_number]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_icao24]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_icao24]"
                      name="Out_icao24">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_icao24]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_registration]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_registration]"
                      name="Out_registration">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_registration]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_typecode]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_typecode]"
                      name="Out_typecode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_typecode]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_origin]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_origin]"
                      name="Out_origin">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_origin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_destination]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_destination]"
                      name="Out_destination">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_destination]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_firstseen]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_firstseen]"
                      name="Out_firstseen">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_firstseen]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_lastseen]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_lastseen]"
                      name="Out_lastseen">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_lastseen]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_day]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_day]"
                      name="Out_day"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_day]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_latitude_1]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_latitude_1]"
                      name="Out_latitude_1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_longtitude_1]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_longtitude_1]"
                      name="Out_longtitude_1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_altitude_1]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_altitude_1]"
                      name="Out_altitude_1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_latitude_2]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_latitude_2]"
                      name="Out_latitude_2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_latitude_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_longtitude_2]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_longtitude_2]"
                      name="Out_longtitude_2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_longtitude_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_altitude_2]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_altitude_2]"
                      name="Out_altitude_2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_altitude_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_airlineicao]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output].Columns[Out_airlineicao]"
                      name="Out_airlineicao">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0].Columns[Out_airlineicao]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - import Flights.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Inputs[Conditional Split Input]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task - import Flights\Flat File Source - flights.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[other rows]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - destination.Inputs[Conditional Split Input]"
              name="other rows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - origin.Outputs[other rows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[other rows1]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Inputs[Conditional Split Input]"
              name="other rows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - destination.Outputs[other rows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[other rows2]"
              endId="Package\Data Flow Task - import Flights\Script Component.Inputs[Input 0]"
              name="other rows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration.Outputs[other rows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[other rows3]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Inputs[Conditional Split Input]"
              name="other rows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty.Outputs[other rows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[otherRows]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Inputs[Conditional Split Input]"
              name="otherRows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - firstseen.Outputs[otherRows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[otherRows1]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - day.Inputs[Conditional Split Input]"
              name="otherRows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - lastseen.Outputs[otherRows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[otherRows2]"
              endId="Package\Data Flow Task - import Flights\Conditional Split - origin.Inputs[Conditional Split Input]"
              name="otherRows"
              startId="Package\Data Flow Task - import Flights\Conditional Split - day.Outputs[otherRows]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[Output 0]"
              endId="Package\Data Flow Task - import Flights\Sort.Inputs[Sort Input]"
              name="Output 0"
              startId="Package\Data Flow Task - import Flights\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Data Flow Task - import Flights.Paths[Sort Output]"
              endId="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Data Flow Task - import Flights\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - cleaning Flights"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9df8de9e-219b-4864-a329-0452d33223ea}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - cleaning Flights"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0955DD7F-D9DB-4FCE-B14D-24F3C87B4AB7}"
          SQLTask:SqlStatementSource="truncate table dbo.Flight;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5AE54998-5AA8-4C0D-A0B6-F69D21C77763}"
      DTS:From="Package\Execute SQL Task - cleaning Flights"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Data Flow Task - import Flights" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - import Flights"
          TopLeft="252,222" />
        <NodeLayout
          Size="256,42"
          Id="Package\Execute SQL Task - cleaning Flights"
          TopLeft="118,80" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="246,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121.5,100"
              Start="0,0"
              End="121.5,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46"
                    Point2="0,50"
                    Point3="4,50" />
                  <mssgle:LineSegment
                    End="117.5,50" />
                  <mssgle:CubicBezierSegment
                    Point1="117.5,50"
                    Point2="121.5,50"
                    Point3="121.5,54" />
                  <mssgle:LineSegment
                    End="121.5,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - import Flights">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="209,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - lastseen"
          TopLeft="178,236" />
        <NodeLayout
          Size="222,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - destination"
          TopLeft="168,501" />
        <NodeLayout
          Size="195,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - origin"
          TopLeft="185,414" />
        <NodeLayout
          Size="167,43"
          Id="Package\Data Flow Task - import Flights\Script Component"
          TopLeft="199,656" />
        <NodeLayout
          Size="210,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - firstseen"
          TopLeft="178,159" />
        <NodeLayout
          Size="253,42"
          Id="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights"
          TopLeft="616,661" />
        <NodeLayout
          Size="194,42"
          Id="Package\Data Flow Task - import Flights\Flat File Source - flights"
          TopLeft="183,0" />
        <NodeLayout
          Size="292,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - icao, callsign, registration"
          TopLeft="130,581" />
        <NodeLayout
          Size="99,42"
          Id="Package\Data Flow Task - import Flights\Sort"
          TopLeft="450,662" />
        <NodeLayout
          Size="258,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - coordinates empty"
          TopLeft="149,73" />
        <NodeLayout
          Size="186,42"
          Id="Package\Data Flow Task - import Flights\Conditional Split - day"
          TopLeft="186,329" />
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[Sort Output]"
          TopLeft="549,682.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67,0"
              Start="0,0"
              End="59.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="59.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[Output 0]"
          TopLeft="366,680.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84,0"
              Start="0,0"
              End="76.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="76.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[otherRows2]"
          TopLeft="280.75,371">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.1320703125,12.87548828125,48.264140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[otherRows1]"
          TopLeft="280.75,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.1320703125,16.87548828125,48.264140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[otherRows]"
          TopLeft="282.75,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.1320703125,8.87548828125,48.264140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[other rows3]"
          TopLeft="280.5,115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.3920703125,13.37548828125,48.784140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[other rows2]"
          TopLeft="279.25,623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.3920703125,7.87548828125,48.784140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[other rows1]"
          TopLeft="277.5,543">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.3920703125,10.37548828125,48.784140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[other rows]"
          TopLeft="280.75,456">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.3920703125,13.87548828125,48.784140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task - import Flights.Paths[Flat File Source Output]"
          TopLeft="279,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - import Flights\OLE DB Destination - import Flights">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>